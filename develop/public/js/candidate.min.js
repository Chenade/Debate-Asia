$(document).ready(function() {
    $('body').css('overflow', 'hidden');

    var download_file = function(text, filename)
    {
        console.log(text);
        var blob = new Blob([text], { type: "text/plain" });

        var link = document.createElement("a");
            link.href = URL.createObjectURL(blob);

            link.download = (filename + ".txt");
            link.innerHTML = "Download";

        document.body.appendChild(link);

        link.click();
        link.remove();
    };

    ajax('GET', '/api/candidates/list', {}, function (a) {
        if(a.success){
            document.cookie = "Authorization="+a.token+"; path=/";
            $('#name').html(a.data.name_cn);
            $('#account').html(a.data.account);
            $('#school_name').html(a.data.school_cn);
            var box = "";
            $('#upcomingEvent').empty();
            $('#pastEvent').empty();
            for (const i in a.data)
            {
                const _this = a.data[i];
                if (_this.status < 4)
                {
                    box = '<div class="col-11" style="background-color: black; min-height: 180px; margin: 10px; padding: 1em; color: #FFFFFF;">';
                    box += '<h5 class="mb-0 mt-0" style="color: #FFFFFF;">' + _this.competition_name + '</h5>';
                    box += '<hr>';
                    box += '<p>' + _this.group_name + '</p>';
                    box += '<p>' + langDict['sessionTime'] + '：' + moment.unix(_this.date).format("YYYY 年 MM 月 DD 日 HH:mm") + '</p>';
                    const diff = moment.unix(_this.date).diff(new Date(), 'minutes');
                    if ( diff < 10 && diff > -120)
                    {
                        box += `<div class="d-flex justify-content-center align-items-end">
                                    <button class="btn btn-light start-btn" 
                                            data-id="${_this.id}">
                                        ${langDict['enter']}${langDict['competition']}
                                    </button>
                                <div>`;
                    }
                    box += '</div>';
                    $('#upcomingEvent').append(box);

                }
                else
                {

                    const pos = (_this.role == 1) ? _this : _this.ops;
                    const neg = (_this.role == 2) ? _this : _this.ops;
                    
                    box = '<div class="col-11" style="background-color: black; min-height: 220px; margin: 10px; padding: 1em; color: #FFFFFF;">';
                    box += '<h5 class="mb-0 mt-0" style="color: #FFFFFF;"><span class="badge badge-warning">' + langDict['evalution'] + '</span>&emsp;' + _this.session_name + '</h5>';
                    box += '<hr>';
                    box += '<div class="d-flex flex-wrap">';
                        box += '<div class="col-12 col-sm-9">';
                            box += '<h5 class="mb-1 mt-0" style="color: #FFFFFF;">' + langDict['sessionTime'] + '：' + moment.unix(_this.date).format("YYYY 年 MM 月 DD 日 HH:mm") + '</h5>';
                            box += '<h5 class="mb-1 mt-0" style="color: #FFFFFF;">' + langDict['pos'] + langDict['title'] + '：' + _this.pos_title + '</h5>';
                            box += '<h5 class="mb-1 mt-0" style="color: #FFFFFF;">' + langDict['neg'] + langDict['title'] + '：' + _this.neg_title + '</h5>';
                            box += '<div class="d-flex flex-wrap mt-2">';
                                box += '<div class="col-12 col-sm-6">';
                                box += '<p class="mb-1" style="color: #FFFFFF;"><span class="badge badge-secondary">' + langDict['pos'] + '：</span></p>';
                                box += '<p class="mb-1" style="color: #FFFFFF;">' + pos.name_cn + '</p>';
                                box += '<p class="mb-1" style="color: #FFFFFF;">' + pos.school_cn + '</p>';
                                box += '</div>';
                                box += '<div class="col-12 col-sm-6">';
                                box += '<p class="mb-1" style="color: #FFFFFF;"><span class="badge badge-secondary">' + langDict['neg'] + '：</span></p>';
                                box += '<p class="mb-1" style="color: #FFFFFF;">' + neg.name_cn + '</p>';
                                box += '<p class="mb-1" style="color: #FFFFFF;">' + neg.school_cn + '</p>';
                                box += '</div>';
                            box += '</div>';
                        box += '</div>';
                        box += '<div class="col-12 col-sm-3">';
                            box += '<div class="d-flex justify-content-center align-items-end flex-column">';
                            if (_this.status >= 4) 
                                box += '<button class="btn btn-light download-article-btn" data-sid="' + _this.id +'">' + langDict['downloadArticle'] + '</button>';
                            // if (_this.status >= 5) box += '<button class="btn btn-light download-judge-btn"" data-sid="' + sid +'">' + langDict['judgeFeedback'] + '</button>';
                            box += '<div>';
                        box += '</div>';
                    box += '</div>';
                    box += '</div>';
                    $('#pastEvent').append(box);
                }

            }
        }else
            $.growl.error({message: a.message})
    }); 

    
    $(document).on('click', '.start-btn', function () {
        const round_id = $(this).data('id');
        location.href = "/candidate/session/" + round_id;
    });

    $(document).on('click', '.download-article-btn', function () {
        
        ajax('GET', '/api/rounds/' + $(this).data('sid') + '/articles', {}, function(a){
            const session = a.data.session;
            const article = a.data.article;
            var text = "";

                text += langDict['sessionName'] + '：' + session.session_name + '\n';
                text += langDict['sessionTime'] + '：' + moment.unix(session.date).format("YYYY-MM-DD HH:mm:ss") + '\n';
                text += langDict['pos'] + langDict['title'] + '：' + session.pos_title + '\n';
                text += langDict['neg'] +langDict['title'] + '：' + session.neg_title + '\n';

                text += '\n---------------------------------------------------------------------------------\n\n';
                text += langDict['mine'] + langDict['argument'] + '：\n';
                text += trimquotes(article[0].content);
                
                text += '\n---------------------------------------------------------------------------------\n\n';
                text += langDict['mine'] + langDict['rebuttal'] + '：\n';
                text += trimquotes(article[1].content);
            
                download_file(text, session.session_name + langDict['article']);
        })
    });

    var pad_space = function(str, len)
    {
        var space = "";
        const str_len = str.length;
        console.log(str, str_len, len);
        const differnce = len - str_len;

        if (differnce > 0)
        {
            for (var i = 0; i <= (differnce / 2); i ++)
                space += " ";
        }
        var ans = space + str + space;
        return (ans);
    };
    
    $(document).on('click', '.download-judge-btn', function () {
        
        ajax('GET', '/api/judges/download/' + $(this).data('sid'), {}, function(a){
            var text = "";

                text += langDict['sessionName'] + '：' + a.data.tag + '\n';
                text += langDict['sessionTime'] + '：' + moment.unix(a.data.date).format("YYYY-MM-DD HH:mm:ss") + '\n';
                text += langDict['title'] + '：\n' + a.data.title.split('$?')[0] + '\n';
                if (a.data.title.split('$?')[1]) text += a.data.title.split('$?')[1] + '\n';

                text += '\n====================================================================================\n\n';

                for (const i in a.data.judge)
                {
                    const _this = a.data.judge[i];

                    text += langDict['score_1_title'] + ': ' + _this.score_1 + ' /200\n';
                    text += langDict['score_2_title'] + ': ' + _this.score_2 + ' /200\n';
                    text += langDict['score_3_title'] + ': ' + _this.score_3 + '  /50 \n';
                    text += langDict['score_4_title'] + ': ' + _this.score_4 + '  /50 \n\n';
                    text += langDict['sum'] + ': ' + _this.score + '/500\n\n';
                    text += langDict['judgeComment'] + ':\n';
                    text += _this.comment + ':\n';

                    text += '\n====================================================================================\n\n';

                }
                download_file(text, a.data.tag + langDict['judgeFeedback']);
        })
    });
 });