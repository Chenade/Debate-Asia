const rounds_id = window.location.pathname.split('/')[3];

function updateUI(stage, data) {
    $('.roles').css('display', 'inline');
    $('#b_article_tab, #a_article_tab').css('display', 'none');
    $('#videos').attr('src', '');
    var config = handleSessionStatus(data.session, stage);

    switch (config.status) {
        case 0:
            $('#stage0').css('display', 'inline');
            $('.roles').css('display', 'none');
            $('#moveStage').data('stage', 1);
            break;
        case 1:
            getRemainingTime(data.session, config.status);
            displaySessionInfo(data);
            $('#curStage').text(langDict['argument']);
            $('#stage1').css('display', 'inline');
            $('#input').val(trimquotes(data.articles.content));
            $('#input').data('aid', data.articles.article_id);
            $('#input').prop('disabled', (config.reset) ? true : false);
            $('#saveArticle').css('display', (config.reset) ? 'none' : 'inline');
            $('#moveStage').css('display', (config.reset) ? 'none' : 'inline');
            $('#moveStage').data('stage', 2);
            break;
        case 2:
            getRemainingTime(data.session, config.status);
            displaySessionInfo(data);
            $('#curStage').text(langDict['read']);
            $('#stage1').css('display', 'inline');
            $('#b_article_tab, #_b_article_tab').css('display', 'inline');
            $('#b_article_content').val(trimquotes(data.ops_argument.content)).prop('disabled', true);
            $('#input').val(trimquotes(data.articles.content));
            $('#input').data('aid', data.articles.article_id).prop('disabled', true);
            $('#saveArticle').css('display', 'none');
            $('#moveStage').data('stage', 3);
            $('#moveStage').hide();
            break;
        case 3:
            getRemainingTime(data.session, config.status);
            displaySessionInfo(data);
            $('#curStage').text(langDict['rebuttal']);
            $('#stage1, #b_article_tab, #a_article_tab').css('display', 'inline');
            $('#b_article_content').val(trimquotes(data.ops_argument.content)).prop('disabled', true);
            $('#a_article_content').val(trimquotes(data.my_argument.content)).prop('disabled', true);
            $('#input').val(trimquotes(data.articles.content));
            $('#input').data('aid', data.articles.article_id).prop('disabled', false);
            $('#input').prop('disabled', (config.reset) ? true : false);
            $('#saveArticle').css('display', (config.reset) ? 'none' : 'inline');
            $('#moveStage').css('display', (config.reset) ? 'none' : 'inline');
            $('#moveStage').data('stage', 4);
            break;
        case 4:
            displaySessionInfo(data);
            $('.roles, #videos').css('display', 'inline');
            showEndMessage();
            break;
    }
}

function displaySessionInfo(data) {
    $('#tag').text(data.session.session_name);
    $('#title').empty();
    $('#title').append('<h4 class="mt-0 mb-1" style="text-indent: 1em;">' + data.session.neg_title + '</h4>');
    $('#title').append('<h4 class="mt-0 mb-1" style="text-indent: 1em;">' + data.session.pos_title + '</h4>');
    $('.t_write').text(data.session.t_write);
    $('.t_read').text(data.session.t_read);
    $('.t_debate').text(data.session.t_debate);
}

function showEndMessage() {
    $.growl.notice({ message: '比賽已結束!' });
    setTimeout(() => {
        window.location.href = '/candidate';
    }, 3000);
}

function handleSessionStatus(data, stage) {
    const _time = moment().utc(false);
    var start = null;
    switch (stage) {
        case 1:
            start = moment.unix(data.date).utc(false);
            minutes = data.t_write;
            break;
        case 2:
            start = moment.unix(data.date).utc(false).add(data.t_write, 'minutes');
            minutes = data.t_read;
            break;
        case 3:
            start = moment.unix(data.date).utc(false).add(data.t_write + data.t_read, 'minutes');
            minutes = data.t_debate;
            break;
        case 4:
            return {
                'status': stage,
                'reset': false,
            }
        default:
            break;
    }
    var diff = _time.diff(start, 'seconds');
    if (diff <= 0)
    {
        return  {
            'status': stage - 1,
            'reset': true,
        }
    }
    else
    {
        return  {
            'status': stage,
            'reset': false,
        }
    }
}

function getRemainingTime(data, stage) {
    const _time = moment().utc(false);
    var start = null;
    var minutes = 0;
    switch (stage) {
        case 1:
            start = moment.unix(data.date).utc(false);
            minutes = data.t_write;
            break;
        case 2:
            start = moment.unix(data.date).utc(false).add(data.t_write, 'minutes');
            minutes = data.t_read;
            break;
        case 3:
            start = moment.unix(data.date).utc(false).add(data.t_write + data.t_read, 'minutes');
            minutes = data.t_debate;
            break;
        default:
            break;
    }
    var end = start.add(minutes, 'minutes');
    var diff = _time.diff(end, 'seconds');
    if (diff > 0)
    {
        $('#moveStage').click();
    }
    else
    {
        diff = Math.abs(diff);
        var h = Math.floor(diff / 3600).toString().padStart(2,'0');
        var m = Math.floor(diff / 60).toString().padStart(2,'0');
        var s = (diff % 60).toString().padStart(2,'0');
        $('#remainTime').text(`${h}:${m}:${s}`);
        setTimeout(() => { getRemainingTime(data, stage); }, 1000);
    }
}

function initSessionInfo(a)
{
    for(const i in a.data.rounds)
    {
        let role = (a.data.rounds[i].role == 1) ? 'a' : 'b';
        $(`#${role}_name`).text(a.data.rounds[i].name_cn);
        $(`#${role}_school`).text(a.data.rounds[i].school_cn);
    }
    
    if (a.data.user.role == 1)
    {
        $('#pos_box').empty();
        $('#neg_box').empty();
        $('#pos_box').append('<video id="user_camera" playsinline autoplay muted></video>');
        $('#neg_box').append('<img id="tmp" src="" style="padding:0;width:300px;height:225px;"/>');   
    }
    else
    {
        $('#pos_box').empty();
        $('#neg_box').empty();
        $('#neg_box').append('<video id="user_camera" playsinline autoplay muted></video>');
        $('#pos_box').append('<img id="tmp" src="" style="padding:0;width:300px;height:225px;"/>');
    }

    var video = document.getElementById('user_camera');
        video.style.width = $('#size_default').width();
        video.style.height = '225px';

    var facingMode = "user";
    var constraints = {
        audio: false,
        video: {
            facingMode: facingMode
        }
    };

    navigator.mediaDevices.getUserMedia(constraints).then(function success(stream) {
        video.srcObject = stream;
    });

    setTimeout(() => {
        uploadImage();
    }, 1500);
}

function setSessionStatus()
{
    ajax('GET', '/api/rounds/' + rounds_id, {}, function (a){
        if(a.success)
        {
            initSessionInfo(a);
            let status = a.data.user.status;
            updateUI(status, a.data);
        }
        else
            window.location.href = "/candidate";
    });
}

function updateSession(stage)
{
    var data = {
        'status': stage,
    };
    ajax('PUT', '/api/rounds/' + rounds_id, data, function (a) {
        if(a.success){
            // document.cookie = "Authorization="+a.token+"; path=/";
            if (stage == 4)
            {
                $('.roles').css('display', 'inline');
                $('#videos').attr('src', '');
                $.growl.notice({message: '比賽結束!'});
                setTimeout(() => {
                    window.location.href = "/candidate";
                }, 3000);
            }
            else{
                $.growl.notice({message: '已完成此階段', duration: 10000})
                setSessionStatus();
            }
        }else
            $.growl.error({message: a.message})
    }); 
}

function saveArticle(id)
{
    var data = {
        'content': $('#input').val(),
    };
    ajax('PUT', '/api/articles/' + id, data, function (a) {
        if(a.success){
            // document.cookie = "Authorization="+a.token+"; path=/";
            $.growl.notice({message: '已儲存文稿'})
        }
        // else
        //     $.growl.error({message: a.message})
    }); 
}

function uploadImage()
{
    var video = document.getElementById('user_camera');
    var canvas = document.createElement('canvas');
        canvas.width = 640;
        canvas.height = 480;
        var ctx = canvas.getContext('2d');
        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
        var dataURI = '';
        dataURI = canvas.toDataURL('image/jpeg'); // can also use 'image/png'
    
    const data = {
        dataURI : dataURI,
        round_id: rounds_id
    }

    ajax('POST', '/api/rounds/' + rounds_id + '/image', data, function (a) {
        if(a.success){
            // document.cookie = "Authorization=" + a.token+"; path=/";
            if (a.data)
                $('#tmp').attr('src', '/camera/' + a.data);
            setTimeout(() => {
                uploadImage();
            }, 3000);
        }else
            $.growl.error({message: a.message})
    }); 
    return false;
}

$(document).ready(function() {

    setSessionStatus();

    $(document).on('click', '.next-stage', function () {
        stage = $(this).data('stage');
        updateSession(stage);
    });

    $(document).on('click', '#saveArticle', function () {
        const aid = $('#input').data('aid');
        saveArticle(aid);
    });
    
    $(document).on('click', '#moveStage', function () {
        $('#saveArticle').click();
        const stage = $(this).data('stage');
        updateSession(stage);
    });
});