function convertStatus(status){
    switch (status) {
        case 0:
            return "未開始";
        case 1:
            return "立論環節";
        case 2:
            return "閱讀環節";
        case 3:
            return "駁論環節";
        case 4:
            return "比賽結束";
        case 5:
            return "評分結束";
        case 6:
            return "排名結束";
        default:
            break;
    }
}

function getSessionInfo(sessionId) {
    ajax('GET', '/api/sessions/' + sessionId + '/rounds', {}, function (a) {
        if(a.success){
            var rows = "";
            $('#end-rounds-btn').show();
            $('#end-rounds-btn').data('id', sessionId);
            for (const i in a.data)
            {
                const _this = a.data[i];
                rows += '<tr>';
                rows += '<td>' + i + '</td>';
                rows += '<td>' + _this.candidates.pos.name_cn;
                rows += '<br><span style="color: #BBB;">' + _this.candidates.pos.school_cn + '</span></td>';
                rows += '<td><img src="/camera/' + _this.candidates.pos.camera + '" width="50" width="50" alt="camera"/></td>';
                rows += '<td>' + convertStatus(_this.candidates.pos.status);
                rows += '<br><span style="color: #BBB;">' + moment(_this.candidates.pos.updated_at).format('YYYY-MM-DD HH:mm:ss') + '</span></td>';
                rows += '<td class="text-center">';
                rows += '<button type="button" class="btn btn-success article-btn" style="margin:0" data-pos="' + _this.candidates.pos.id + '" data-neg="' + _this.candidates.neg.id + '">' + langDict['article'] + '</button>';
                rows += '</td>';
                rows += '<td>' + convertStatus(_this.candidates.neg.status);
                rows += '<br><span style="color: #BBB;">' + moment(_this.candidates.neg.updated_at).format('YYYY-MM-DD HH:mm:ss') + '</span></td>';
                rows += '<td><img src="/camera/' + _this.candidates.neg.camera + '" width="50" width="50" alt="camera"/></td>';
                rows += '<td>' + _this.candidates.neg.name_cn;
                rows += '<br><span style="color: #BBB;">' + _this.candidates.neg.school_cn + '</span></td>';
                rows += '</tr>';
            }
            $('#session_list').html(rows);
        }else
            $.growl.error({message: a.message})
    });
}

$(document).ready(function(){

    var tid = "session",
        object = {
            article: {}
        };

    var getCompetition = function(){
        $('#end-rounds-btn').hide();
        ajax('GET', '/api/competitions', {}, function (a) {
            $('#select_competition').empty();
            for (const i in a.data)
                {
                    const _this = a.data[i];
                    $('#select_competition').append('<option value="' + _this.id +'">' +  _this.competition_name +'</option>');
                }
                $( ".date-convert" ).each(function( index ) {
                    var _tmp = moment.unix($(this).text()).format("YYYY/MM/DD HH:mm:ss");
                    $( this ).text(_tmp);
                  });
                $('#select_competition').selectpicker('refresh');
        });
    };

    getCompetition();

    $('[data-admin=' + tid + ']').addClass('active');

    $(document).on('click', '.article-btn', function () {
        const pos = $(this).data('pos');
        const neg = $(this).data('neg');
        $('.info').html('');
        $('.info').val('');
        ajax('GET', '/api/rounds/' + pos + '/articles', {}, function (a) {
            if(a.success){
                $('#a_name').html(a.data.session.name_cn);
                $('#a_school').html(a.data.session.school_cn);
                $('#a_status').html(a.data.session.status);
                $('#a_updated_at').html(moment(a.data.session.updated_at).format('YYYY-MM-DD HH:mm:ss'));
                for(const i in a.data.article){
                    
                    $('#a_' + a.data.article[i].type).val(a.data.article[i].content);
                }
            }else
                $.growl.error({message: a.message})
        }); 

        ajax('GET', '/api/rounds/' + neg + '/articles', {}, function (a) {
            if(a.success){
                $('#neg_name').html(a.data.session.name_cn);
                $('#neg_school').html(a.data.session.school_cn);
                $('#neg_status').html(a.data.session.status);
                $('#neg_updated_at').html(moment(a.data.session.updated_at).format('YYYY-MM-DD HH:mm:ss'));
                for(const i in a.data.article){
                    $('#neg_' + a.data.article[i].type).val(a.data.article[i].content);
                }
            }else
                $.growl.error({message: a.message})
        }); 

        $('#article_modal').modal({
            backdrop: 'static',
            keyboard: true,
            show: true
        });
    });

    $('#select_competition').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
        const cid = this.value;
        $('#end-rounds-btn').hide();
        $('#session_list').html('');
        $('#select_session').empty();
        $('#select_session').selectpicker('refresh');
        ajax('GET', '/api/competitions/' + cid, {}, function (a) {
            if(!a.error)
            {
                $('#select_groups').empty();
                for (const i in a.groups)
                {
                    const _this = a.groups[i];
                    $('#select_groups').append('<option value="' + _this.id +'">' +  _this.group_name +'</option>');
                }
                $('#select_groups').selectpicker('refresh');
            }
        });
    });

    $('#select_groups').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
        const groupId = this.value;
        $('#end-rounds-btn').hide();
        $('#session_list').html('');
        ajax('GET', '/api/groups/' + groupId + '/sessions', {}, function (a) {
            $('#select_session').empty();
            for (const i in a.data)
            {
                const _this = a.data[i];
                $('#select_session').append('<option value="' + _this.id +'">' +  _this.session_name +'</option>');
            }
            $('#select_session').selectpicker('refresh');
        });
    });

    $('#select_session').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
        const sessionId = this.value;
        getSessionInfo(sessionId);
    });

    $('#end-rounds-btn').click(function () {
        var sessionId = $(this).data('id');
        ajax('POST', '/api/sessions/' + sessionId + '/end', {}, function (a) {
            getSessionInfo(sessionId);
        });
    });

});
