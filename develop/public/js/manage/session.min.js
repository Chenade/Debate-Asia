var autoRefresh = null;

function convertStatus(status){
    switch (status) {
        case 0:
            return "未開始";
        case 1:
            return "立論環節";
        case 2:
            return "緩衝環節";
        case 3:
            return "閱讀環節";
        case 4:
            return "駁論環節";
        case 5:
            return "比賽結束";
        case 6:
            return "評分結束";
        case 7:
            return "排名結束";
        default:
            break;
    }
}

function getSessionInfo(sessionId) {
    ajax('GET', '/api/sessions/' + sessionId + '/rounds', {}, function (a) {
        if(a.success){
            var rows = "";
            $('#end-rounds-btn').show();
            $('#download-rounds-btn').show();
            $('#end-rounds-btn').data('id', sessionId);
            for (const i in a.data)
            {
                const _this = a.data[i];
                rows += '<tr>';
                rows += '<td>' + i + '</td>';
                rows += '<td>' + _this.candidates.pos?.name_cn;
                rows += '<br><span style="color: #BBB;">' + _this.candidates.pos?.school_cn + '</span></td>';
                rows += '<td><img src="/camera/' + _this.candidates.pos?.camera + '" width="50" width="50" alt="camera"/></td>';
                rows += '<td>' + convertStatus(_this.candidates.pos?.status);
                rows += '<br><span style="color: #BBB;">' + moment(_this.candidates.pos?.updated_at).format('YYYY-MM-DD HH:mm:ss') + '</span></td>';
                rows += '<td class="text-center">';
                rows += '<button type="button" class="btn btn-success article-btn" style="margin:0" data-pos="' + _this.candidates.pos?.id + '" data-neg="' + _this.candidates.neg?.id + '">' + langDict['article'] + '</button>';
                rows += '&emsp;<button type="button" class="btn btn-success judge-btn" style="margin:0" data-pos="' + _this.candidates.pos?.id + '" data-neg="' + _this.candidates.neg?.id + '">' + langDict['judgeFeedback'] + '</button>';
                rows += '</td>';
                rows += '<td>' + convertStatus(_this.candidates.neg?.status);
                rows += '<br><span style="color: #BBB;">' + moment(_this.candidates.neg?.updated_at).format('YYYY-MM-DD HH:mm:ss') + '</span></td>';
                rows += '<td><img src="/camera/' + _this.candidates.neg?.camera + '" width="50" width="50" alt="camera"/></td>';
                rows += '<td>' + _this.candidates.neg?.name_cn;
                rows += '<br><span style="color: #BBB;">' + _this.candidates.neg?.school_cn + '</span></td>';
                rows += '</tr>';
            }
            $('#session_list').html(rows);
            if (autoRefresh != null)
                clearTimeout(autoRefresh);
            autoRefresh = setTimeout(function () { getSessionInfo(sessionId);}, 60000);
        }else
            $.growl.error({message: a.message})
    });
}

var download_file = function(text, filename)
{
    var printWindow = window.open('', '', 'height=400,width=800');
    printWindow.document.write(`<html><head><title>${filename}</title>`);
    printWindow.document.write('</head><body>');
    printWindow.document.write('<hr />');
    printWindow.document.write('<div style="width: 100%; text-align: center; font-size: 12px; line-height: 2em;">');
    printWindow.document.write(text);
    printWindow.document.write('</div>');
    printWindow.document.write('</body></html>');
    printWindow.document.close();
    printWindow.print();
};

$(document).ready(function(){

    //組別、辯題
    var tid = "session",
        object = {
            pos: {},
            neg: {},
        };

    var getCompetition = function(){
        $('#end-rounds-btn').hide();
        ajax('GET', '/api/competitions', {}, function (a) {
            $('#select_competition').empty();
            for (const i in a.data)
                {
                    const _this = a.data[i];
                    $('#select_competition').append('<option value="' + _this.id +'">' +  _this.competition_name +'</option>');
                }
                $( ".date-convert" ).each(function( index ) {
                    var _tmp = moment.unix($(this).text()).format("YYYY/MM/DD HH:mm:ss");
                    $( this ).text(_tmp);
                  });
                $('#select_competition').selectpicker('refresh');
        });
    };

    getCompetition();

    $('[data-admin=' + tid + ']').addClass('active');

    $(document).on('click', '.article-btn', function () {
        const pos = $(this).data('pos');
        const neg = $(this).data('neg');
        $('.info').html('');
        $('.info').val('');
        ajax('GET', '/api/rounds/' + pos + '/articles', {}, function (a) {
            if(a.success){
                $('#a_name').html(a.data.session.name_cn);
                $('#a_school').html(a.data.session.school_cn);
                $('#a_status').html(convertStatus(a.data.session.status));
                $('#a_updated_at').html(moment(a.data.session.updated_at).format('YYYY-MM-DD HH:mm:ss'));
                $('#a_camera').attr('src', '/camera/' + a.data.session.camera);
                object.pos = {
                    article: {},
                    competition_name: a.data.session.competition_name,
                    session_name: a.data.session.session_name,
                    title: a.data.session.pos_title,
                    role: "正方",
                    name_cn: a.data.session.name_cn,
                    school_cn: a.data.session.school_cn,
                };
                for(const i in a.data.article){
                    
                    $('#a_' + a.data.article[i].type).val(a.data.article[i].content);
                    object.pos.article[a.data.article[i].type] = a.data.article[i].content;
                }
            }else
                $.growl.error({message: a.message})
        }); 

        ajax('GET', '/api/rounds/' + neg + '/articles', {}, function (a) {
            if(a.success){
                $('#neg_name').html(a.data.session.name_cn);
                $('#neg_school').html(a.data.session.school_cn);
                $('#neg_status').html(convertStatus(a.data.session.status));
                $('#neg_updated_at').html(moment(a.data.session.updated_at).format('YYYY-MM-DD HH:mm:ss'));
                $('#neg_camera').attr('src', '/camera/' + a.data.session.camera);
                object.neg = {
                    article: {},
                    competition_name: a.data.session.competition_name,
                    session_name: a.data.session.session_name,
                    title: a.data.session.neg_title,
                    role: "反方",
                    name_cn: a.data.session.name_cn,
                    school_cn: a.data.session.school_cn,
                };
                for(const i in a.data.article){
                    $('#neg_' + a.data.article[i].type).val(a.data.article[i].content);
                    object.neg.article[a.data.article[i].type] = a.data.article[i].content;
                }
            }else
                $.growl.error({message: a.message})
        }); 

        $('#article_modal').modal({
            backdrop: 'static',
            keyboard: true,
            show: true
        });
    });

    function generateDownload(pos, neg) {
        let sections = [];

        for (const i in pos.article) {
            let sub_title = `
                ${pos.session_name}<br />
                    <p style="font-size:14px; font-weight: bold; margin: 0;">${pos.title}</p>
                    <p style="font-size:14px; margin: 0;">${pos.name_cn} ${pos.school_cn}</p>`;
            sections.push({
                title: sub_title,
                subtitle: `${pos.role} ${i == 0 ? '申論' : '駁論'}：<br /><br />`,
                text: pos.article[0] + '<br />',
            });
            sub_title = `
                ${neg.session_name}<br />
                    <p style="font-size:14px; font-weight: bold; margin: 0;">${neg.title}</p>
                    <p style="font-size:14px; margin: 0;">${neg.name_cn} ${neg.school_cn}</p>`;
            sections.push({
                title: sub_title,
                subtitle: `${neg.role} ${i == 0 ? '申論' : '駁論'}：<br /><br />`,
                text: neg.article[0] + '<br />',
            });
        }

        return (sections);
    }

    $('#download-articles-btn').click(function () {
        let content = generateDownload(object.pos, object.neg);
        let text = '';
        for (const i in content) {
            text += '<div style="page-break-after: always;">';
            text += content[i].title + '<br />' + content[i].subtitle + content[i].text;
            text += '</div>';
        }

        download_file(text, object.pos.session_name);
    });
    

    $(document).on('click', '.judge-btn', function () {
        const posId = $(this).data('pos');
        const negId = $(this).data('neg');
        ajax('GET', '/api/judges/' + posId + '/' + negId + '/feedback', {}, function (a) {
            console.log(a);
            if (a.success)
            {
                $('#pos_tab').html('');
                $('#neg_tab').html('');
                for(const i in a.data)
                {
                    for (const j in a.data[i])
                    {
                        const _this = a.data[i][j];
                        const target_tab = (_this.role == '1') ? '#pos_tab' : '#neg_tab';
                        $(target_tab).append(`
                            <div class="d-flex flex-wrap">
                                <div class="col-12 col-lg-4" style="padding: 30px;">
                                    <h6>評委名稱：${_this.name_cn}（${_this.name_en}）</h6>
                                    <h6>提交時間：${moment(_this.updated_at).format('YYYY-MM-DD HH:mm:ss')}</h6>
                                    <h6><strong>總分（500分）：${parseInt(_this.score_1) + parseInt(_this.score_2) + parseInt(_this.score_3) + parseInt(_this.score_4)}</strong></h6>
                                    <hr>
                                    <h6>立論稿件（200分）：${_this.score_1}</h6>
                                    <h6>反駁稿件（200分）：${_this.score_2}</h6>
                                    <h6>推論證明（50分）：${_this.score_3}</h6>
                                    <h6>文字用詞（50分）：${_this.score_4}</h6>
                                </div>
                                <div class="col-12 col-lg-8">
                                    <div class="col-12">
                                        <div class="form-group">
                                            <label class="col-form-label">評語:</label>
                                            <textarea class="info" rows="8" cols="15" disabled>${_this.comment}</textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr>
                        `);
                    }
                }
                $('#judge_modal').modal({
                    backdrop: 'static',
                    keyboard: true,
                    show: true
                });

            }
        });
    });

    $('#select_competition').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
        const cid = this.value;
        $('#end-rounds-btn').hide();
        $('#session_list').html('');
        $('#select_session').empty();
        $('#select_session').selectpicker('refresh');
        ajax('GET', '/api/competitions/' + cid, {}, function (a) {
            if(!a.error)
            {
                $('#select_groups').empty();
                for (const i in a.groups)
                {
                    const _this = a.groups[i];
                    $('#select_groups').append('<option value="' + _this.id +'">' +  _this.group_name +'</option>');
                }
                $('#select_groups').selectpicker('refresh');
            }
        });
    });

    $('#select_groups').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
        const groupId = this.value;
        $('#end-rounds-btn').hide();
        $('#session_list').html('');
        $('#select_session').empty();
        $('#select_session').selectpicker('refresh');
        ajax('GET', '/api/groups/' + groupId + '/sessions', {}, function (a) {
            $('#select_session').empty();
            for (const i in a.data)
            {
                const _this = a.data[i];
                $('#select_session').append('<option value="' + _this.id +'">' +  _this.session_name +'</option>');
            }
            $('#select_session').selectpicker('refresh');
        });
    });

    $('#select_session').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
        const sessionId = this.value;
        getSessionInfo(sessionId);
    });

    $('#end-rounds-btn').click(function () {
        var sessionId = $(this).data('id');
        ajax('POST', '/api/sessions/' + sessionId + '/end', {}, function (a) {
            getSessionInfo(sessionId);
        });
    });

});
